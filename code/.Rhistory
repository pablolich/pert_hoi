alpha = 0.7)+
scale_color_viridis_c(option = "plasma")+
theme(aspect.ratio = 0.8,
#text = element_text(size=10, family="LM Roman 10"),
panel.grid = element_blank(),
panel.background = element_blank(),
panel.border = element_rect(fill = NA),
legend.position = "none")
ggplot(dat_small)+
geom_point(aes(x = x1, y = x2,
color = alpha))+
geom_point(data = dat_small,
aes(x = x1l/(x01), y = x2l/(x02)),
color = "gray",
size = 0.7,
alpha = 0.7)+
scale_color_viridis_c(option = "plasma")+
theme(aspect.ratio = 0.8,
#text = element_text(size=10, family="LM Roman 10"),
panel.grid = element_blank(),
panel.background = element_blank(),
panel.border = element_rect(fill = NA),
legend.position = "none") %>%
ggsave("../data/linear_map_example.pdf", width = 1, height = 0.8)
ggplot(dat_small)+
geom_point(aes(x = x1, y = x2,
color = alpha))+
geom_point(data = dat_small,
aes(x = x1l/(x01), y = x2l/(x02)),
color = "gray",
size = 0.7,
alpha = 0.7)+
scale_color_viridis_c(option = "plasma")+
theme(aspect.ratio = 0.8,
#text = element_text(size=10, family="LM Roman 10"),
panel.grid = element_blank(),
panel.background = element_blank(),
panel.border = element_rect(fill = NA),
legend.position = "none")
ggsave("../data/linear_map_example.pdf", width = 1, height = 0.8)
ggsave("../data/linear_map_example.pdf", width = 10, height = 8)
ggsave("../data/linear_map_example.pdf", width = 5, height = 4)
ggsave("../data/linear_map_example.pdf", width = 4, height = 3.5)
ggplot(dat_small)+
geom_point(aes(x = x1, y = x2,
color = alpha))+
geom_point(data = dat_small,
aes(x = x1l/(x01), y = x2l/(x02)),
color = "gray",
size = 0.7,
alpha = 0.4)+
scale_color_viridis_c(option = "plasma")+
theme(aspect.ratio = 0.8,
#text = element_text(size=10, family="LM Roman 10"),
panel.grid = element_blank(),
panel.background = element_blank(),
panel.border = element_rect(fill = NA),
legend.position = "none")
ggsave("../data/linear_map_example.pdf", width = 4, height = 3.5)
ggsave("../data/linear_map_example.pdf", width = 3, height = 2)
ggplot(dat_small)+
geom_point(data = dat_small,
aes(x = x1l/(x01), y = x2l/(x02)),
color = "gray",
size = 0.7,
alpha = 0.4)+
geom_point(aes(x = x1, y = x2,
color = alpha))+
scale_color_viridis_c(option = "plasma")+
theme(aspect.ratio = 0.8,
#text = element_text(size=10, family="LM Roman 10"),
panel.grid = element_blank(),
panel.background = element_blank(),
panel.border = element_rect(fill = NA),
legend.position = "none")
ggsave("../data/linear_map_example.pdf", width = 3, height = 2)
ggplot(dat_small)+
geom_point(data = dat_small,
aes(x = x1l/(x01), y = x2l/(x02)),
color = "black",
size = 0.5)+
geom_point(aes(x = x1, y = x2,
color = alpha),
alpha = 0.7)+
scale_color_viridis_c(option = "plasma")+
theme(aspect.ratio = 0.8,
#text = element_text(size=10, family="LM Roman 10"),
panel.grid = element_blank(),
panel.background = element_blank(),
panel.border = element_rect(fill = NA),
legend.position = "none")
ggsave("../data/linear_map_example.pdf", width = 3, height = 2)
ggplot(dat_small)+
geom_point(data = dat_small,
aes(x = x1l/(x01), y = x2l/(x02)),
color = "black",
size = 0.1)+
geom_point(aes(x = x1, y = x2,
color = alpha),
alpha = 0.7)+
scale_color_viridis_c(option = "plasma")+
theme(aspect.ratio = 0.8,
#text = element_text(size=10, family="LM Roman 10"),
panel.grid = element_blank(),
panel.background = element_blank(),
panel.border = element_rect(fill = NA),
legend.position = "none")
ggsave("../data/linear_map_example.pdf", width = 3, height = 2)
ggsave("../data/linear_map_example.pdf", width = 4, height = 3)
ggplot(dat_small)+
geom_point(data = dat_small,
aes(x = x1l/(x01), y = x2l/(x02)),
color = "black",
size = 0.1)+
geom_point(aes(x = x1, y = x2,
color = alpha),
alpha = 0.5)+
scale_color_viridis_c(option = "plasma")+
theme(aspect.ratio = 0.8,
#text = element_text(size=10, family="LM Roman 10"),
panel.grid = element_blank(),
panel.background = element_blank(),
panel.border = element_rect(fill = NA),
legend.position = "none")
ggsave("../data/linear_map_example.pdf", width = 4, height = 3)
aes(x = x1l, y = x2l,
size = 0.1)+
aes(x = x1l, y = x2l,
ggplot(dat_small)+
geom_point(data = dat_small,
aes(x = x1l, y = x2l,)
color = "black",
ggsave("../data/linear_map_example.pdf", width = 4, height = 3)
ggplot(dat_small)+
geom_point(data = dat_small,
aes(x = x1l, y = x2l,),
color = "black",
size = 0.1)+
geom_point(aes(x = x1, y = x2,
color = alpha),
alpha = 0.5)+
scale_color_viridis_c(option = "plasma")+
theme(aspect.ratio = 0.8,
#text = element_text(size=10, family="LM Roman 10"),
panel.grid = element_blank(),
panel.background = element_blank(),
panel.border = element_rect(fill = NA),
legend.position = "none")
ggsave("../data/linear_map_example.pdf", width = 4, height = 3)
ggplot(dat_small)+
geom_point(data = dat_small,
aes(x = x1l, y = x2l),
color = "black",
size = 0.1)+
geom_point(aes(x = x1, y = x2,
color = alpha),
alpha = 0.5)+
scale_color_viridis_c(option = "plasma")+
theme(aspect.ratio = 0.8,
#text = element_text(size=10, family="LM Roman 10"),
panel.grid = element_blank(),
panel.background = element_blank(),
panel.border = element_rect(fill = NA),
legend.position = "none")
ggsave("../data/linear_map_example.pdf", width = 4, height = 3)
ggsave("../data/linear_map_example_r.pdf", width = 4, height = 3)
ggplot(dat_small)+
geom_point(aes(x = r1, y = r2))
ggsave("../data/linear_map_example_r.pdf", width = 4, height = 3)
ggplot(dat_small)+
geom_point(aes(x = r1, y = r2))+
theme(aspect.ratio = 1,
panel.grid = element_blank(),
panel.background = element_blank(),
panel.border = element_rect(fill = NA),
legend.position = "none")
ggsave("../data/linear_map_example_r.pdf", width = 4, height = 3)
ggplot(dat_small)+
geom_point(data = dat_small,
aes(x = x1l, y = x2l),
color = "black",
size = 0.1)+
geom_point(aes(x = x1, y = x2,
color = alpha),
alpha = 0.5)+
scale_color_viridis_c(option = "plasma")+
theme(aspect.ratio = 1,
#text = element_text(size=10, family="LM Roman 10"),
panel.grid = element_blank(),
panel.background = element_blank(),
panel.border = element_rect(fill = NA),
legend.position = "none")
ggsave("../data/linear_map_example.pdf", width = 4, height = 3)
ggsave("../data/linear_map_example_r.pdf", width = 4, height = 4)
ggplot(dat_small)+
geom_point(aes(x = r1, y = r2))+
theme(aspect.ratio = 1,
panel.grid = element_blank(),
panel.background = element_blank(),
panel.border = element_rect(fill = NA),
legend.position = "none")
ggsave("../data/linear_map_example_r.pdf", width = 4, height = 4)
ggplot(dat_small)+
geom_point(data = dat_small,
aes(x = x1l, y = x2l),
color = "black",
size = 0.1)+
geom_point(aes(x = x1, y = x2,
color = alpha),
alpha = 0.5)+
scale_color_viridis_c(option = "plasma")+
theme(aspect.ratio = 1,
#text = element_text(size=10, family="LM Roman 10"),
panel.grid = element_blank(),
panel.background = element_blank(),
panel.border = element_rect(fill = NA),
legend.position = "none")
ggsave("../data/linear_map_example.pdf", width = 4, height = 4)
library(tidyverse)
library(gridExtra)
library(RColorBrewer)
#library(tune)
dat = read.table("../data/feasibility_allcons_niceviz.csv")
colnames(dat) = c("sim", "alpha",
"dtheta", "theta", "rho",
"r01", "r02",
"r1", "r2",
"x1", "x2",
"x01", "x02",
"x1l", "x2l",
"area")
dat = dat %>%
mutate(xmag = sqrt(((x1/x01-1))^2 + ((x2/x02-1))^2),
xmagnorm = xmag/rho,
xmaglin = sqrt((x1l/x01-1)^2 + (x2l/x02-1)^2),
xmaglinnorm = xmaglin/rho,
homo = dtheta<1e-6)
pdf("../data/phaseportraitallcons.pdf")
#less alphas for plotting purposes
datred = dat %>% filter(alpha == 0 | alpha == 0.4| alpha == 0.7 | alpha == 0.8)
for (i in 1:max(dat$sim)){
datsim = datred %>% filter(sim == i)
#datsim = dat %>% filter(sim == i)
dataround = datsim %>% filter(homo == T)
p = ggplot(datsim, aes(x = x1/(x01), y = x2/(x02),
#color = xmag
))+
geom_point(size = 0.5)+
geom_point(data = datsim,
aes(x = x1l/(x01), y = x2l/(x02)),
color = "gray",
size = 0.1,
alpha = 0.7)+
geom_point(data = dataround,
aes(x = x1/(x01), y = x2/(x02)),
color = "red",
size = 0.2)+
coord_cartesian(xlim = c(0, NA), ylim = c(0,NA))+
facet_wrap(~alpha, ncol = 1
)+
#scale_color_viridis_c(option = "plasma")+
theme(aspect.ratio = 1,
panel.grid = element_blank(),
panel.background = element_blank(),
panel.border = element_rect(fill = NA),
legend.position = "none")
ggsave("../data/example_manuscript.pdf", width = 2, height = 8)
q =
ggplot(datsim,
aes(r1, r2,
color = xmag))+
geom_point()+
#labs(title = paste0(i))+
geom_point(data = dataround,
aes(x = r1, y = r2),
color = "green")+
coord_cartesian(xlim = c(-1, 1), ylim = c(-1, 1))+
scale_color_viridis_c(option = "plasma")+
facet_wrap(~alpha,
ncol= 1)+
theme(aspect.ratio = 1,
panel.grid = element_blank(),
panel.background = element_blank(),
panel.border = element_rect(fill = NA),
legend.position = "none")
grid.arrange(q, p, ncol= 2)
}
#less alphas for plotting purposes
datred = dat %>% filter(alpha == 0.4| alpha == 0.7 | alpha == 0.8)
i = 43
datsim = datred %>% filter(sim == i)
#datsim = dat %>% filter(sim == i)
dataround = datsim %>% filter(homo == T)
p = ggplot(datsim, aes(x = x1/(x01), y = x2/(x02),
#color = xmag
))+
geom_point(size = 0.5)+
geom_point(data = datsim,
aes(x = x1l/(x01), y = x2l/(x02)),
color = "gray",
size = 0.1,
alpha = 0.7)+
geom_point(data = dataround,
aes(x = x1/(x01), y = x2/(x02)),
color = "red",
size = 0.2)+
coord_cartesian(xlim = c(0, NA), ylim = c(0,NA))+
facet_wrap(~alpha, ncol = 1
)+
#scale_color_viridis_c(option = "plasma")+
theme(aspect.ratio = 1,
panel.grid = element_blank(),
panel.background = element_blank(),
panel.border = element_rect(fill = NA),
legend.position = "none")
ggsave("../data/example_manuscript.pdf", width = 2, height = 8)
q =
ggplot(datsim,
aes(r1, r2,
color = xmag))+
geom_point()+
#labs(title = paste0(i))+
geom_point(data = dataround,
aes(x = r1, y = r2),
color = "green")+
coord_cartesian(xlim = c(-1, 1), ylim = c(-1, 1))+
scale_color_viridis_c(option = "plasma")+
facet_wrap(~alpha,
ncol= 1)+
theme(aspect.ratio = 1,
panel.grid = element_blank(),
panel.background = element_blank(),
panel.border = element_rect(fill = NA),
legend.position = "none")
grid.arrange(q, p, ncol= 2)
q =
ggplot(datsim,
aes(r1, r2,
color = xmag))+
geom_point()+
#labs(title = paste0(i))+
geom_point(data = dataround,
aes(x = r1, y = r2),
color = "green")+
coord_cartesian(xlim = c(-1, 1), ylim = c(-1, 1))+
scale_color_viridis_c(option = "plasma")+
facet_wrap(~alpha)+
theme(aspect.ratio = 1,
panel.grid = element_blank(),
panel.background = element_blank(),
panel.border = element_rect(fill = NA),
legend.position = "none")
grid.arrange(q, p, ncol= 2)
p = ggplot(datsim, aes(x = x1/(x01), y = x2/(x02),
#color = xmag
))+
geom_point(size = 0.5)+
geom_point(data = datsim,
aes(x = x1l/(x01), y = x2l/(x02)),
color = "gray",
size = 0.1,
alpha = 0.7)+
geom_point(data = dataround,
aes(x = x1/(x01), y = x2/(x02)),
color = "red",
size = 0.2)+
coord_cartesian(xlim = c(0, NA), ylim = c(0,NA))+
facet_wrap(~alpha
)+
#scale_color_viridis_c(option = "plasma")+
theme(aspect.ratio = 1,
panel.grid = element_blank(),
panel.background = element_blank(),
panel.border = element_rect(fill = NA),
legend.position = "none")
ggsave("../data/example_manuscript.pdf", width = 2, height = 8)
ggsave("../data/example_manuscript.pdf", width = 5, height = 2)
ggsave("../data/example_manuscript.pdf", width = 4.5, height = 2)
ggsave("../data/example_manuscript.pdf", width = 4.4, height = 2)
q =
ggplot(datsim,
aes(r1, r2,
color = xmag))+
geom_point()+
#labs(title = paste0(i))+
geom_point(data = dataround,
aes(x = r1, y = r2),
color = "green")+
coord_cartesian(xlim = c(-1, 1), ylim = c(-1, 1))+
scale_color_viridis_c(option = "plasma")+
facet_wrap(~alpha)+
theme(aspect.ratio = 1,
panel.grid = element_blank(),
panel.background = element_blank(),
panel.border = element_rect(fill = NA),
legend.position = "none")
dat = read.table("../data/feasibility_allcons_niceviz.csv")
colnames(dat) = c("sim", "alpha",
"dtheta", "theta", "rho",
"r01", "r02",
"r1", "r2",
"x1", "x2",
"x01", "x02",
"x1l", "x2l",
"area")
dat = dat %>%
mutate(xmag = sqrt(((x1/x01-1))^2 + ((x2/x02-1))^2),
xmagnorm = xmag/rho,
xmaglin = sqrt((x1l/x01-1)^2 + (x2l/x02-1)^2),
xmaglinnorm = xmaglin/rho,
homo = dtheta<1e-6)
datcone = dat %>% filter(dtheta <= 2e-1) %>%
group_by(alpha, rho, dtheta) %>%
summarize(avmag = median(xmag),
avmaglin = median(xmaglin)) %>%
filter(avmaglin<10)
ggplot(datcone, aes(x = alpha, y = avmag,
color = dtheta))+
geom_point()+
facet_wrap(~rho,
scales = "free")
dev.off()
dev.off()
dev.off()
avmaglin
datcone = dat %>% filter(dtheta <= 2e-1) %>%
group_by(alpha, rho, dtheta) %>%
summarize(avmag = median(xmag),
avmaglin = median(xmaglin)) %>%
filter(avmaglin<10)
ggplot(datcone, aes(x = alpha, y = avmag,
color = dtheta))+
geom_point()+
facet_wrap(~rho,
scales = "free")
datcone = dat %>% #filter(dtheta <= 2e-1) %>%
group_by(alpha, rho, dtheta) %>%
summarize(avmag = median(xmag),
avmaglin = median(xmaglin)) %>%
filter(avmaglin<10)
ggplot(datcone, aes(x = alpha, y = avmag,
color = dtheta))+
geom_point()+
facet_wrap(~rho,
scales = "free")
datcone = dat %>% #filter(dtheta <= 2e-1) %>%
group_by(alpha, rho) %>%
summarize(avmag = median(xmag),
avmaglin = median(xmaglin)) %>%
filter(avmaglin<10)
ggplot(datcone, aes(x = alpha, y = avmag,
color = dtheta))+
geom_point()+
facet_wrap(~rho,
scales = "free")
ggplot(datcone, aes(x = alpha, y = avmag,
#color = dtheta
))+
geom_point()+
facet_wrap(~rho,
scales = "free")
dat = read.table("../data/maximum_fully_feasible.csv")
dat
dat = read.table("../data/maximum_fully_feasible.csv")
colnames(dat) = c("sim", "n", "alpha", "idrow", "eqid", "rvec", "xeq", "npert")
dat = read.table("../data/maximum_fully_feasible.csv")
colnames(dat) = c("sim", "n", "alpha", "idrow", "rho", "eqid", "rvec", "xeq", "npert")
dat
dat = read.table("../data/maximum_fully_feasible.csv")
colnames(dat) = c("sim", "n", "alpha", "idrow", "rho", "eqid", "rvec", "sppid", "xeq", "npert")
dat
dat_fully_feas = dat %>% group_by(sim, n, alpha, idrow, eqid) %>%
slice_max(npert)
dat_fully_feas
dat = read.table("../data/maximum_fully_feasible.csv")
colnames(dat) = c("sim", "n", "alpha", "idrow", "rho", "eqid", "rvec", "sppid", "xeq", "npert")
dat_fully_feas = dat %>% group_by(sim, n, alpha, idrow, eqid) %>%
slice_max(npert)
dat
dat_fully_feas
unique(dat$npert)
dat = read.table("../data/maximum_fully_feasible.csv")
colnames(dat) = c("sim", "n", "alpha", "idrow", "rho", "eqid", "rvec", "sppid", "xeq", "npert")
dat_fully_feas = dat %>% group_by(sim, n, alpha, idrow, eqid) %>%
slice_max(npert)
unique(dat$npert)
source("~/Desktop/pert_hoi/code/maximum_fully_feasible.R", echo=TRUE)
dat_fully_feas = dat %>% filter(npert == 100)
dat_fully_feas
dat_box_red_wide = dat_fully_feas %>%
mutate(rowsid = idrowvec + eqid) %>%
group_by(sim, alpha) %>%
pivot_wider(names_from = sppid,
values_from = c(xeq, rvec))
dat_box_red_wide = dat_fully_feas %>%
mutate(rowsid = idrow + eqid) %>%
group_by(sim, alpha) %>%
pivot_wider(names_from = sppid,
values_from = c(xeq, rvec))
dat_box_red_wide
ggplot(dat_box_red_wide)+
geom_point(aes(x = r1, y = r2),
alpha = 0.5, size = 0.5)+
facet_wrap(~alpha)+
theme(aspect.ratio = 1)
dat_box_red_wide
ggplot(dat_box_red_wide)+
geom_point(aes(x = rvec_1, y = rvec_2),
alpha = 0.5, size = 0.5)+
facet_wrap(~alpha)+
theme(aspect.ratio = 1)
quit()
