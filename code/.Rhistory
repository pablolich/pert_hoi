y = alphasd),
color = "gray")
empiricalplot = ggplot(dataq2)+
geom_point(aes(x = alphaav,
y = alphasd),
color = "red",
shape = 3)+
facet_wrap(~interaction(rsign, Asign, Bsign))+
geom_point(data = pointsnull,
aes(x = alphaav,
y = alphasd),
color = "gray",
alpha = 0.1)
empiricalplot
#allwindows = function(alphavec)
#loop through window size
alphavec = seq(0,1,0.1)
pointsnull = data.frame()
for (wsize in 1:length(alphavec)){
#loop through window position
#get how many possible positions there are.
npos = length(alphavec)-wsize
if (npos == 0){
pointsnull = rbind(pointsnull, c(mean(alphavec), sd(alphavec)))
}
else{
for (wpos in 0:npos){
window = seq(1,wsize) + wpos
alphawind = alphavec[window]
pointostore = c(mean(alphawind), sd(alphawind))
if (is.na(pointostore[2])){
pointostore[2] = 0
}
pointsnull = rbind(pointsnull, pointostore)
}
}
}
colnames(pointsnull) = c("alphaav", "alphasd")
dataq2 = datplot %>%
filter(spp == 1,
feasible == T) %>%
group_by(sim, n, rsign, Asign, Bsign) %>%
summarise(alphaav = mean(alpha),
alphasd = sd(alpha))
empiricalplot = ggplot(dataq2)+
geom_point(aes(x = alphaav,
y = alphasd),
color = "red",
shape = 3)+
facet_wrap(~interaction(rsign, Asign, Bsign))+
geom_point(data = pointsnull,
aes(x = alphaav,
y = alphasd),
color = "gray",
alpha = 0.1)
empiricalplot
empiricalplot = ggplot(dataq2)+
geom_point(data = pointsnull,
aes(x = alphaav,
y = alphasd),
color = "gray",
alpha = 0.1)+
geom_point(dataq2,
aes(x = alphaav,
y = alphasd),
color = "red",
shape = 3)+
facet_wrap(~interaction(rsign, Asign, Bsign))
empiricalplot
empiricalplot = ggplot(dataq2)+
geom_point(data = pointsnull,
aes(x = alphaav,
y = alphasd),
alpha = 0.5)+
geom_point(dataq2,
aes(x = alphaav,
y = alphasd),
color = "red",
shape = 3)+
facet_wrap(~interaction(rsign, Asign, Bsign))
empiricalplot
empiricalplot = ggplot(pointsnull)+
geom_point(data = pointsnull,
aes(x = alphaav,
y = alphasd),
alpha = 0.5)+
ggplot(dataq2)
empiricalplot = ggplot(pointsnull)+
geom_point(data = pointsnull,
aes(x = alphaav,
y = alphasd),
alpha = 0.5)+
ggplot(dataq2)+
geom_point(dataq2,
aes(x = alphaav,
y = alphasd),
color = "red",
shape = 3)+
facet_wrap(~interaction(rsign, Asign, Bsign))
empiricalplot = ggplot(pointsnull)+
geom_point(data = pointsnull,
aes(x = alphaav,
y = alphasd),
alpha = 0.5)+
ggplot(dataq2)+
geom_point(dataq2,
aes(x = alphaav,
y = alphasd),
color = "red",
shape = 3)+
facet_wrap(~interaction(rsign, Asign, Bsign))
ggplot()+
geom_point(data = pointsnull,
aes(x = alphaav,
y = alphasd),
alpha = 0.5)+
ggplot(dataq2)+
geom_point(dataq2,
aes(x = alphaav,
y = alphasd),
color = "red",
shape = 3)+
facet_wrap(~interaction(rsign, Asign, Bsign))
ggplot()+
geom_point(data = pointsnull,
aes(x = alphaav,
y = alphasd),
alpha = 0.5)+
ggplot(dataq2)+
geom_point(dataq2,
aes(x = alphaav,
y = alphasd),
color = "red",
shape = 3)+
facet_wrap(~interaction(rsign, Asign, Bsign))
ggplot()+
geom_point(data = pointsnull,
aes(x = alphaav,
y = alphasd),
alpha = 0.5)+
geom_point(dataq2,
aes(x = alphaav,
y = alphasd),
color = "red",
shape = 3)+
facet_wrap(~interaction(rsign, Asign, Bsign))
ggplot()+
geom_point(data = pointsnull,
aes(x = alphaav,
y = alphasd),
alpha = 0.5)+
geom_point(data = dataq2,
aes(x = alphaav,
y = alphasd),
color = "red",
shape = 3)+
facet_wrap(~interaction(rsign, Asign, Bsign))
#allwindows = function(alphavec)
#loop through window size
alphavec = seq(0,1,0.01)
pointsnull = data.frame()
for (wsize in 1:length(alphavec)){
#loop through window position
#get how many possible positions there are.
npos = length(alphavec)-wsize
if (npos == 0){
pointsnull = rbind(pointsnull, c(mean(alphavec), sd(alphavec)))
}
else{
for (wpos in 0:npos){
window = seq(1,wsize) + wpos
alphawind = alphavec[window]
pointostore = c(mean(alphawind), sd(alphawind))
if (is.na(pointostore[2])){
pointostore[2] = 0
}
pointsnull = rbind(pointsnull, pointostore)
}
}
}
colnames(pointsnull) = c("alphaav", "alphasd")
ggplot()+
geom_point(data = pointsnull,
aes(x = alphaav,
y = alphasd),
alpha = 0.1)+
geom_point(data = dataq2,
aes(x = alphaav,
y = alphasd),
color = "red",
shape = 3)+
facet_wrap(~interaction(rsign, Asign, Bsign))
empiricalplot = ggplot()+
geom_point(data = pointsnull,
aes(x = alphaav,
y = alphasd),
alpha = 0.1)+
geom_point(data = dataq2,
aes(x = alphaav,
y = alphasd),
color = "red",
shape = 3)+
facet_wrap(~interaction(rsign, Asign, Bsign))
empiricalplot
#allwindows = function(alphavec)
#loop through window size
alphavec = seq(0,1,0.05)
pointsnull = data.frame()
for (wsize in 1:length(alphavec)){
#loop through window position
#get how many possible positions there are.
npos = length(alphavec)-wsize
if (npos == 0){
pointsnull = rbind(pointsnull, c(mean(alphavec), sd(alphavec)))
}
else{
for (wpos in 0:npos){
window = seq(1,wsize) + wpos
alphawind = alphavec[window]
pointostore = c(mean(alphawind), sd(alphawind))
if (is.na(pointostore[2])){
pointostore[2] = 0
}
pointsnull = rbind(pointsnull, pointostore)
}
}
}
colnames(pointsnull) = c("alphaav", "alphasd")
dataq2 = datplot %>%
filter(spp == 1,
feasible == T) %>%
group_by(sim, n, rsign, Asign, Bsign) %>%
summarise(alphaav = mean(alpha),
alphasd = sd(alpha))
empiricalplot = ggplot()+
geom_point(data = pointsnull,
aes(x = alphaav,
y = alphasd),
alpha = 0.1)+
geom_point(data = dataq2,
aes(x = alphaav,
y = alphasd),
color = "red",
shape = 3)+
facet_wrap(~interaction(rsign, Asign, Bsign))
empiricalplot
dataq2 = datplot %>%
filter(spp == 1,
feasible == T,
n==2) %>%
group_by(sim, n, rsign, Asign, Bsign) %>%
summarise(alphaav = mean(alpha),
alphasd = sd(alpha))
empiricalplot = ggplot()+
geom_point(data = pointsnull,
aes(x = alphaav,
y = alphasd),
alpha = 0.1)+
geom_point(data = dataq2,
aes(x = alphaav,
y = alphasd),
color = "red",
shape = 3)+
facet_wrap(~interaction(rsign, Asign, Bsign))
empiricalplot
dataq2 = datplot %>%
filter(spp == 1,
feasible == T,
n==3) %>%
group_by(sim, n, rsign, Asign, Bsign) %>%
summarise(alphaav = mean(alpha),
alphasd = sd(alpha))
empiricalplot = ggplot()+
geom_point(data = pointsnull,
aes(x = alphaav,
y = alphasd),
alpha = 0.1)+
geom_point(data = dataq2,
aes(x = alphaav,
y = alphasd),
color = "red",
shape = 3)+
facet_wrap(~interaction(rsign, Asign, Bsign))
empiricalplot
dataq1 = datplot %>%
ungroup() %>%
group_by(sim, n, alpha, rsign, Asign, Bsign) %>%
filter(feasible == T,
spp == 1, #to make sure I only count each community once
n==3) %>%
summarize(neq = n()) %>%
ungroup(sim) %>%
mutate(neqav = mean(neq))
ggplot(dataq1)+
geom_point(aes(x = alpha, y = neqav))+
facet_wrap(~interaction(rsign, Asign, Bsign))
dataq1 = datplot %>%
ungroup() %>%
group_by(sim, n, alpha, rsign, Asign, Bsign) %>%
filter(feasible == T,
spp == 1, #to make sure I only count each community once
n==2) %>%
summarize(neq = n()) %>%
ungroup(sim) %>%
mutate(neqav = mean(neq))
ggplot(dataq1)+
geom_point(aes(x = alpha, y = neqav))+
facet_wrap(~interaction(rsign, Asign, Bsign))
dataq2 = datplot %>%
filter(spp == 1,
feasible == T,
n==3) %>%
group_by(sim, n, rsign, Asign, Bsign) %>%
summarise(alphaav = mean(alpha),
alphasd = sd(alpha))
empiricalplot = ggplot()+
geom_point(data = pointsnull,
aes(x = alphaav,
y = alphasd),
alpha = 0.1)+
geom_point(data = dataq2,
aes(x = alphaav,
y = alphasd),
color = "red",
shape = 3)+
facet_wrap(~interaction(rsign, Asign, Bsign))
empiricalplot
dataq3 = datplot %>%
filter(spp == 1) %>%
group_by(n, rsigns, Asigns, Bsigns)
dataq3 = datplot %>%
filter(spp == 1) %>%
group_by(n, rsign, Asign, Bsign) %>%
dataq3 = datplot %>%
filter(spp == 1) %>%
group_by(n, rsign, Asign, Bsign)
dataq3 = datplot %>%
filter(spp == 1) %>%
group_by(n, rsign, Asign, Bsign)
dataq3
dataq3 = datplot %>%
filter(n == 2) %>%
group_by(n, rsign, Asign, Bsign) %>%
summarise(xav = mean(xRe))
dataq3
datplot
dataq3 = datplot %>%
filter(n == 2,
feasible == T) %>%
group_by(n, rsign, Asign, Bsign) %>%
summarise(xav = mean(xRe))
dataq3
ggplot(dataq3) %>%
geom_point(aes(x = alpha,
y = xav))
dataq3 = datplot %>%
filter(n == 2,
feasible == T) %>%
group_by(n, alpha, rsign, Asign, Bsign) %>%
summarise(xav = mean(xRe))
ggplot(dataq3) %>%
geom_point(aes(x = alpha,
y = xav))
ggplot(dataq3) +
geom_point(aes(x = alpha,
y = xav)) +
facet_wrap(interaction(rsign, Asign, Bsign))
dataq3
ggplot(dataq3) +
geom_point(aes(x = alpha,
y = xav)) +
facet_wrap(~interaction(rsign, Asign, Bsign))
ggplot(dataq3) +
geom_point(aes(x = alpha,
y = xav)) +
facet_wrap(~interaction(rsign, Asign, Bsign))+
scale_y_continuous(trans='log10')
ggplot(dataq3) +
geom_point(aes(x = alpha,
y = xav)) +
scale_y_continuous(trans='log10')+
facet_wrap(~interaction(rsign, Asign, Bsign))
plotq3 = ggplot(dataq3) +
geom_point(aes(x = alpha,
y = xav)) +
scale_y_continuous(trans='log10')+
facet_wrap(~interaction(rsign, Asign, Bsign))
plotq3
dataq3 = datplot %>%
filter(n == 3,
feasible == T) %>%
group_by(n, alpha, rsign, Asign, Bsign) %>%
summarise(xav = mean(xRe))
plotq3 = ggplot(dataq3) +
geom_point(aes(x = alpha,
y = xav)) +
scale_y_continuous(trans='log10')+
facet_wrap(~interaction(rsign, Asign, Bsign))
plotq3
#load data
dat = read.table("../data/portraitsigned.csv")
colnames(dat) = c("sim", "n", "rsign", "Asign", "Bsign", "alpha", "spp", "eqID", "xRe", "lambdaRe")
datplot = dat %>% group_by(sim, n, eqID, alpha, rsign, Asign, Bsign) %>%
mutate(stable = lambdaRe<0,
feasible = all(xRe > 0))
nmax = max(datplot$n)
nsim = max(datplot$sim)
nmax = max(datplot$n)
nsim = max(datplot$sim)
ggplot(dataq1)+
geom_point(aes(x = alpha, y = neqav,
color = stable))+
facet_wrap(~interaction(rsign, Asign, Bsign))
dataq1 = datplot %>%
ungroup() %>%
group_by(sim, n, alpha, rsign, Asign, Bsign) %>%
filter(feasible == T,
spp == 1, #to make sure I only count each community once
n==2) %>%
summarize(neq = n()) %>%
ungroup(sim) %>%
mutate(neqav = mean(neq))
dataq1 = datplot %>%
ungroup() %>%
group_by(sim, n, alpha, rsign, Asign, Bsign) %>%
filter(feasible == T,
spp == 1, #to make sure I only count each community once
n==2) %>%
mutate(neq = n()) %>%
ungroup(sim) %>%
mutate(neqav = mean(neq))
ggplot(dataq1)+
geom_point(aes(x = alpha, y = neqav,
color = stable))+
scale_color_manual(values = c("gray", "orange"))
ggplot(dataq1)+
geom_point(aes(x = alpha, y = neqav,
color = stable))+
scale_color_manual(values = c("gray", "orange"))+
facet_wrap(~interaction(rsign, Asign, Bsign))
ggplot(dataq1)+
geom_point(aes(x = alpha, y = neqav,
color = stable))+
scale_color_manual(values = c("gray", "orange"))+
facet_wrap(~interaction(rsign, Asign, Bsign))
ggplot(dataq1)+
geom_point(aes(x = alpha, y = neqav))+
scale_color_manual(values = c("gray", "orange"))+
facet_wrap(~interaction(rsign, Asign, Bsign))
dataq1 = datplot %>%
ungroup() %>%
group_by(sim, n, alpha, rsign, Asign, Bsign) %>%
filter(feasible == T,
spp == 1, #to make sure I only count each community once
n==2) %>%
summarize(neq = n()) %>%
ungroup(sim) %>%
mutate(neqav = mean(neq))
ggplot(dataq1)+
geom_point(aes(x = alpha, y = neqav))+
facet_wrap(~interaction(rsign, Asign, Bsign))
dataq1 = datplot %>%
ungroup() %>%
group_by(sim, n, alpha, rsign, Asign, Bsign) %>%
filter(feasible == T,
spp == 1, #to make sure I only count each community once
n==2) %>%
summarize(neq = n()) %>%
ungroup(sim) %>%
mutate(neqav = mean(neq))
ggplot(dataq1)+
geom_point(aes(x = alpha, y = neqav,
color = stable))+
scale_color_manual(values = c("gray", "orange"))+
facet_wrap(~interaction(rsign, Asign, Bsign))
dataq1 = datplot %>%
ungroup() %>%
group_by(sim, n, alpha, rsign, Asign, Bsign, stable) %>%
filter(feasible == T,
spp == 1, #to make sure I only count each community once
n==2) %>%
summarize(neq = n()) %>%
ungroup(sim) %>%
mutate(neqav = mean(neq))
ggplot(dataq1)+
geom_point(aes(x = alpha, y = neqav))+
facet_wrap(~interaction(rsign, Asign, Bsign))
dataq1 = datplot %>%
ungroup() %>%
group_by(sim, n, alpha, rsign, Asign, Bsign) %>%
filter(feasible == T,
spp == 1, #to make sure I only count each community once
n==2) %>%
summarize(neq = n()) %>%
ungroup(sim) %>%
mutate(neqav = mean(neq))
dataq1
dataq1 = datplot %>%
ungroup() %>%
group_by(sim, n, alpha, rsign, Asign, Bsign, stable) %>%
filter(feasible == T,
spp == 1, #to make sure I only count each community once
n==2) %>%
summarize(neq = n()) %>%
ungroup(sim) %>%
mutate(neqav = mean(neq))
ggplot(dataq1)+
geom_point(aes(x = alpha, y = neqav,
color = stable))+
scale_color_manual(values = c("gray", "orange"))+
facet_wrap(~interaction(rsign, Asign, Bsign))
dataq1
